# In beautiful theory

# Piece movement functionality

The chess piece would contain a small magnet at its base, which would activate the reed switch (regular switch in the simulide schematics), therefore registering a change in the chessboard layout.

## Computer movement functionality

The movement itself would be performed using a CNC movement mechanic hidden inside of the chess board. The cnc machine would use a magnet to move the chess piece on top of the board. The movement function would be stopped once the piece has been placed on top of the selected square, after which the player can then make his move.

## Player movement functionality

Two buttons would be placed on the side of the chessboard on each side of the chessboard's LCD screen (used for displaying info), which would function as movement finishers. Once a player has placed his piece in the desired square and pressed the respective button - his move would then end and the chessboard layout calculation phase would begin.

# The real shit

mcumax_set_fen_position(const char *value); - string value
    - Do I have to update the board using this bitch every time?
        - Yes. Fuck.


### The reading from the reed switches
| Merely a visual representation. Not how it actually looks in case if you're reading this while drunk (as always)

X X X X X X X X    r n b q k b n r
X X X X X X X X    p p p p p p p p
. . . . . . . .    8 8 8 8 8 8 8 8 
. . . . . . . .    8 8 8 8 8 8 8 8 
. . . . . . . .    8 8 8 8 8 8 8 8 
. . . . . . . .    8 8 8 8 8 8 8 8 
X X X X X X X X    P P P P P P P P
X X X X X X X X    R N B Q K B N R

              ----->

X X X X X X X X    r n b q k b n r
X X X X . X X X    p p p p 8 p p p
. . . . . . . .    8 8 8 8 8 8 8 8 
. . . . X . . .    8 8 8 8 p 8 8 8 
. . . . . . . .    8 8 8 8 8 8 8 8 
. . . . . . . .    8 8 8 8 8 8 8 8 
X X X X X X X X    P P P P P P P P
X X X X X X X X    R N B Q K B N R

You've gotta turn this bitch into code. How???


array with reed switch states[0,1,0,1 || 1,0,1,0  ]; // the || are just for readability, not in the code
char fen writing[8,p,8,p || p,8,p,8];

Send that bitch to the engine with the mcumax_set_fen_position function and I think that should be it. Right?

### Half-assed conclusion:

We have to make a representation of the chessboard layout in code, which in turn we have to associate with the respective pieces which then have to be written out in FEN

#### TLDR

-- Read the chessboard state
 --> Associate the respective chess pieces
  --> Turn that bitch into FEN... somehow


# HOW THE FUCK DO I CONNECT THE TWO???!?!?!?!

So, now we have a function which tracks the fucking movements and is able to generate a fen string, refer to generateFENFromState(), but doesn't recognize the different pieces tho. It sees every piece as a pawn, which is gay as fuck. We're not going to ask chatgpt to do this shit for us, so we've got to figure this out ourselves.

How?...

- Feed the changes into the function
-- compare with the 